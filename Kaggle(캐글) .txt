< Kaggle(캐글) >
- 캐글 데이터(csv 파일)를 활용한 엘라스틱서치 인덱스 생성

- tbdb 5000 movie 데이터 범위 확인
GET tbdb_5000_movie/_mapping
- stats 집계는 통계값을 알려주는 메트릭 집계이다.
GET tbdb_5000_moviedb_5000_movie/_search
{
  "size": 0,
  "aggs": {
    "tbdb_stats": {
      "stats": {
        "field": "release_date"
      }
    }
  }
}

- 로그스태시를 이용해서 tmdb_5000_movies.csv 파일 읽어오기

=======================================================================================================================================
logstash-tbdb.conf의 내용
=======================================================================================================================================
input {
  file {
    path => "C:/k_digital/elasticStack/workspace/csv/tmdb_5000_movies.csv"
    start_position => "beginning"
    sincedb_path => "nul"

  }
}

output {
  stdout{ }
}
=======================================================================================================================================
- 로그스태시 실행
=======================================================================================================================================
.\bin\logstash.bat -f .\config\logstash-tbdb.conf --log.level error
======================================================================================================================================= 

tmdb_5000_movies.csv 파일의 첫 줄에는 컬럼의 이름이 적혀 있는데 컬럼 이름은 제외하고 읽는다.
구분자를 지정하고 컬럼 이름을 붙이고 불필요한 컬럼은 제거한다.

======================================================================================================================================= 
logstash-tbdb.conf의 내용
- separator 옵션은 구분자를 지정한다. (기본값은 ",")
- skip_header 옵션을 true로 지정해서 첫 줄의 컬럼 이름은 제외하고 읽어들인다. (기본값은 false)
- columns 옵션은 파일 첫 줄의 컬럼 이름을 지정해서 필드 이름으로 지정한다.
- remove_field 옵션은 불필요한 필드를 제거한다.
=======================================================================================================================================
input {
  file {
    path => "C:/k_digital/elasticStack/workspace/csv/tmdb_5000_movies.csv"
    start_position => "beginning"
    sincedb_path => "nul"

  }
}

filter {
  csv {
    separator => ","
    skip_header => true
    columns => ["budget", "genres", "homepage", "id", "keywords", "original_language", "original_title", "overview", "popularity" , "production_companies", "production_countries", "release_date", "revenue", "runtime", "spoken_languages", "status", "tagline", "title", "vote_average", "vote_count"]
    remove_field => ["message", "host", "@version", "path", "@timestamp"]
  }
}

output {
  stdout{ }
}
=======================================================================================================================================


















